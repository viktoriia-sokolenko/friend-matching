{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport ProfileCard from '../components/ProfileCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = () => {\n  _s();\n  const [allProfiles, setAllProfiles] = useState([]);\n  const [filteredProfiles, setFilteredProfiles] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    const getAllProfiles = async () => {\n      const token = localStorage.getItem('access_token');\n      try {\n        const response = await fetch('/users/profiles', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const data_with_profiles = data.filter(student => student.user_profiles !== null);\n        setAllProfiles(data_with_profiles);\n        setFilteredProfiles(data_with_profiles);\n      } catch (error) {\n        console.error(\"Error fetching profiles:\", error);\n      }\n    };\n    getAllProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by keywords\",\n        className: \"input-name\",\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Object.entries(yearFilters).map(([year, isChecked]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isChecked,\n              onChange: () => handleCheckboxChange(flag),\n              className: \"input-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 25\n            }, this), year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this)\n        }, year, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Grid\",\n      children: filteredProfiles.map(student => /*#__PURE__*/_jsxDEV(ProfileCard, {\n        id: student.id,\n        firstName: student.first_name,\n        lastName: student.last_name,\n        year: student.user_profiles.year,\n        major: student.user_profiles.major,\n        bio: student.user_profiles.bio,\n        image: student.profilepicture\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Profiles, \"dAu09lYwqv2eX23P9mxV0isuYDY=\");\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["useState","useEffect","ProfileCard","jsxDEV","_jsxDEV","Profiles","_s","allProfiles","setAllProfiles","filteredProfiles","setFilteredProfiles","searchInput","setSearchInput","getAllProfiles","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","Error","status","data","json","data_with_profiles","filter","student","user_profiles","error","console","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","Object","entries","yearFilters","map","year","isChecked","checked","handleCheckboxChange","flag","id","firstName","first_name","lastName","last_name","major","bio","image","profilepicture","_c","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport ProfileCard from '../components/ProfileCard';\n\n\nconst Profiles = () => {\n    const [allProfiles, setAllProfiles] = useState([]);\n    const [filteredProfiles, setFilteredProfiles] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n    useEffect(() => {\n        const getAllProfiles = async () => {\n            const token = localStorage.getItem('access_token');\n            try {\n            const response = await fetch('/users/profiles', {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            const data_with_profiles = data.filter(student => student.user_profiles !== null);\n            setAllProfiles(data_with_profiles);\n            setFilteredProfiles(data_with_profiles);\n          } catch (error) {\n            console.error(\"Error fetching profiles:\", error);\n          }\n        };\n        getAllProfiles();\n      }, []);\n    return (\n        <div className='Page'>\n        <div className = \"Filters\">\n            <input\n                type=\"text\"\n                placeholder=\"Search by keywords\"\n                className='input-name'\n                onChange={(e) => setSearchInput(e.target.value)}\n            />\n            <div className = \"row\">\n                {Object.entries(yearFilters).map(([year, isChecked]) => (\n                    <div key={year}>\n                        <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={isChecked}\n                            onChange={() => handleCheckboxChange(flag)}\n                            className='input-check'\n                        />\n                        {year}\n                        </label>\n                    </div>\n                    ))}\n            </div>\n        </div> \n        <div className=\"Grid\">\n            {filteredProfiles.map((student) => (\n                   <ProfileCard \n                        key={student.id} \n                        id={student.id} \n                        firstName={student.first_name}\n                        lastName={student.last_name} \n                        year={student.user_profiles.year}\n                        major={student.user_profiles.major}\n                        bio = {student.user_profiles.bio}\n                        image = {student.profilepicture}\n                    />\n                ))\n            }\n        </div>\n        </div>\n    )\n\n}\nexport default Profiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}