{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport ProfileCard from '../components/ProfileCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = () => {\n  _s();\n  const [allProfiles, setAllProfiles] = useState([]);\n  const [filteredProfiles, setFilteredProfiles] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  useEffect(() => {\n    const getAllProfiles = async () => {\n      const token = localStorage.getItem('access_token');\n      try {\n        const response = await fetch('/users/profiles', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const data_with_profiles = data.filter(student => student.user_profiles !== null);\n        setAllProfiles(data_with_profiles);\n        setFilteredProfiles(data_with_profiles);\n      } catch (error) {\n        console.error(\"Error fetching profiles:\", error);\n      }\n    };\n    getAllProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by keywords\",\n        className: \"input-name\",\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedBook,\n        onChange: e => setSelectedBook(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Choose a book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), books.map(book => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: book,\n          children: book\n        }, book, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: Object.entries(flagFilters).map(([flag, isChecked]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              checked: isChecked,\n              onChange: () => handleCheckboxChange(flag),\n              className: \"input-check\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }, this), flag]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)\n        }, flag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: sortCriteria.order,\n        onChange: e => setSortCriteria(prev => ({\n          ...prev,\n          order: e.target.value\n        })),\n        className: \"input-name\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"created_at\",\n          children: \"Sort by created time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"upvotes\",\n          children: \"Sort by upvotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: sortCriteria.descending,\n          className: \"input-check\",\n          onChange: e => setSortCriteria(prev => ({\n            ...prev,\n            descending: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), \"Descending?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Grid\",\n      children: filteredProfiles.map(student => /*#__PURE__*/_jsxDEV(ProfileCard, {\n        id: student.id,\n        firstName: student.first_name,\n        lastName: student.last_name,\n        year: student.user_profiles.year,\n        major: student.user_profiles.major,\n        bio: student.user_profiles.bio,\n        image: student.profilepicture\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Profiles, \"dAu09lYwqv2eX23P9mxV0isuYDY=\");\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["useState","useEffect","ProfileCard","jsxDEV","_jsxDEV","Profiles","_s","allProfiles","setAllProfiles","filteredProfiles","setFilteredProfiles","searchInput","setSearchInput","getAllProfiles","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","Error","status","data","json","data_with_profiles","filter","student","user_profiles","error","console","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","selectedBook","setSelectedBook","books","map","book","Object","entries","flagFilters","flag","isChecked","checked","handleCheckboxChange","sortCriteria","order","setSortCriteria","prev","descending","id","firstName","first_name","lastName","last_name","year","major","bio","image","profilepicture","_c","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport ProfileCard from '../components/ProfileCard';\n\n\nconst Profiles = () => {\n    const [allProfiles, setAllProfiles] = useState([]);\n    const [filteredProfiles, setFilteredProfiles] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n    useEffect(() => {\n        const getAllProfiles = async () => {\n            const token = localStorage.getItem('access_token');\n            try {\n            const response = await fetch('/users/profiles', {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            const data_with_profiles = data.filter(student => student.user_profiles !== null);\n            setAllProfiles(data_with_profiles);\n            setFilteredProfiles(data_with_profiles);\n          } catch (error) {\n            console.error(\"Error fetching profiles:\", error);\n          }\n        };\n        getAllProfiles();\n      }, []);\n    return (\n        <div className='Page'>\n        <div className = \"Filters\">\n            <input\n                type=\"text\"\n                placeholder=\"Search by keywords\"\n                className='input-name'\n                onChange={(e) => setSearchInput(e.target.value)}\n            />\n            <select\n            value={selectedBook}\n            onChange={(e) => setSelectedBook(e.target.value)}\n        >\n            <option value=\"\">\n            Choose a book\n            </option>\n            {books.map((book) => (\n            <option key={book} value={book}>\n                {book}\n            </option>\n            ))}\n            </select>\n            <div className = \"row\">\n                {Object.entries(flagFilters).map(([flag, isChecked]) => (\n                    <div key={flag}>\n                        <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={isChecked}\n                            onChange={() => handleCheckboxChange(flag)}\n                            className='input-check'\n                        />\n                        {flag}\n                        </label>\n                    </div>\n                    ))}\n            </div>\n            <select\n                value={sortCriteria.order}\n                onChange={(e) => setSortCriteria((prev) => ({ ...prev, order: e.target.value }))}\n                className='input-name'\n            >\n                <option value=\"created_at\">\n                Sort by created time\n                </option>\n                <option value=\"upvotes\">\n                Sort by upvotes\n                </option>\n            </select>\n            <label>\n                <input\n                    type=\"checkbox\"\n                    checked={sortCriteria.descending}\n                    className = \"input-check\"\n                    onChange={(e) => setSortCriteria((prev) => ({ ...prev, descending: e.target.checked }))}\n                />\n                Descending?\n            </label>\n        </div> \n        <div className=\"Grid\">\n            {filteredProfiles.map((student) => (\n                   <ProfileCard \n                        key={student.id} \n                        id={student.id} \n                        firstName={student.first_name}\n                        lastName={student.last_name} \n                        year={student.user_profiles.year}\n                        major={student.user_profiles.major}\n                        bio = {student.user_profiles.bio}\n                        image = {student.profilepicture}\n                    />\n                ))\n            }\n        </div>\n        </div>\n    )\n\n}\nexport default Profiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}