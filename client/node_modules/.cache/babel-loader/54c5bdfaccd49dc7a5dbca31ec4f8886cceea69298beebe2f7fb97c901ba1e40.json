{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport ProfileCard from '../components/ProfileCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = () => {\n  _s();\n  const [allProfiles, setAllProfiles] = useState([]);\n  const [filteredProfiles, setFilteredProfiles] = useState([]);\n  const [searchInput, setSearchInput] = useState('');\n  const [selectedYears, setSelectedYears] = useState([]);\n  const [allYears, setAllYears] = useState([]);\n  const [includeSavedProfiles, setIncludeSavedProfiles] = useState(false);\n  const handleYearChange = e => {\n    const year = e.target.value;\n    setSelectedYears(prevYears => {\n      if (prevYears.includes(year)) {\n        return prevYears.filter(selectedYear => selectedYear !== year);\n      } else {\n        return [...prevYears, year];\n      }\n    });\n  };\n  const handleSavedProfilesChange = () => {\n    setIncludeSavedProfiles(prevState => !prevState); // Toggle the saved profiles filter\n  };\n  useEffect(() => {\n    const getAllProfiles = async () => {\n      const token = localStorage.getItem('access_token');\n      try {\n        const response = await fetch('/users/profiles', {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        const data_with_profiles = data.filter(student => student.user_profiles !== null);\n        setAllProfiles(data_with_profiles);\n        setFilteredProfiles(data_with_profiles);\n        setAllYears(Array.from(new Set(data_with_profiles.map(profile => profile.user_profiles.year.toString()))));\n      } catch (error) {\n        console.error(\"Error fetching profiles:\", error);\n      }\n    };\n    getAllProfiles();\n  }, []);\n  useEffect(() => {\n    const filterProfiles = () => {\n      if (allProfiles) {\n        const filteredData = allProfiles.filter(profile => {\n          var _profile$user_profile, _profile$user_profile2;\n          const matchesYear = selectedYears.length === 0 || selectedYears.includes(profile.user_profiles.year.toString());\n          if (!matchesYear) return false;\n          if (searchInput === \"\") return true;\n          const lowerSearchInput = searchInput.toLowerCase();\n          const bioMatches = (_profile$user_profile = profile.user_profiles.bio) === null || _profile$user_profile === void 0 ? void 0 : _profile$user_profile.toLowerCase().includes(lowerSearchInput);\n          const majorMatches = (_profile$user_profile2 = profile.user_profiles.major) === null || _profile$user_profile2 === void 0 ? void 0 : _profile$user_profile2.toLowerCase().includes(lowerSearchInput);\n          const firstNameMatches = profile.first_name.toLowerCase().includes(lowerSearchInput);\n          const lastNameMatches = profile.last_name.toLowerCase().includes(lowerSearchInput);\n          return bioMatches || majorMatches || firstNameMatches || lastNameMatches;\n        });\n        setFilteredProfiles(filteredData);\n      }\n    };\n    filterProfiles();\n  }, [searchInput, allProfiles, selectedYears]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by keywords\",\n        className: \"input-name\",\n        onChange: e => setSearchInput(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Graduation Year:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: allYears.map(year => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            value: year,\n            checked: selectedYears.includes(year),\n            onChange: handleYearChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), year]\n        }, year, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Grid\",\n      children: filteredProfiles.map(student => /*#__PURE__*/_jsxDEV(ProfileCard, {\n        id: student.id,\n        firstName: student.first_name,\n        lastName: student.last_name,\n        year: student.user_profiles.year,\n        major: student.user_profiles.major,\n        bio: student.user_profiles.bio,\n        image: student.profilepicture\n      }, student.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n};\n_s(Profiles, \"OK3FeUqQLZ0FcbtFUeE1v5GVI+0=\");\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["useState","useEffect","ProfileCard","jsxDEV","_jsxDEV","Profiles","_s","allProfiles","setAllProfiles","filteredProfiles","setFilteredProfiles","searchInput","setSearchInput","selectedYears","setSelectedYears","allYears","setAllYears","includeSavedProfiles","setIncludeSavedProfiles","handleYearChange","e","year","target","value","prevYears","includes","filter","selectedYear","handleSavedProfilesChange","prevState","getAllProfiles","token","localStorage","getItem","response","fetch","method","headers","Authorization","ok","Error","status","data","json","data_with_profiles","student","user_profiles","Array","from","Set","map","profile","toString","error","console","filterProfiles","filteredData","_profile$user_profile","_profile$user_profile2","matchesYear","length","lowerSearchInput","toLowerCase","bioMatches","bio","majorMatches","major","firstNameMatches","first_name","lastNameMatches","last_name","className","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","checked","id","firstName","lastName","image","profilepicture","_c","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport ProfileCard from '../components/ProfileCard';\n\n\nconst Profiles = () => {\n    const [allProfiles, setAllProfiles] = useState([]);\n    const [filteredProfiles, setFilteredProfiles] = useState([]);\n    const [searchInput, setSearchInput] = useState('');\n    const [selectedYears, setSelectedYears] = useState([]);\n    const [allYears, setAllYears] = useState([]);\n    const [includeSavedProfiles, setIncludeSavedProfiles] = useState(false);\n    const handleYearChange = (e) => {\n        const year = e.target.value;\n        setSelectedYears((prevYears) => {\n            if (prevYears.includes(year)) {\n                return prevYears.filter((selectedYear) => selectedYear !== year);\n            } else {\n                return [...prevYears, year];\n            }\n        });\n    };\n    const handleSavedProfilesChange = () => {\n        setIncludeSavedProfiles(prevState => !prevState); // Toggle the saved profiles filter\n    };\n    useEffect(() => {\n        const getAllProfiles = async () => {\n            const token = localStorage.getItem('access_token');\n            try {\n            const response = await fetch('/users/profiles', {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                },\n            });\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            const data_with_profiles = data.filter(student => student.user_profiles !== null);\n            setAllProfiles(data_with_profiles);\n            setFilteredProfiles(data_with_profiles);\n            setAllYears(Array.from(new Set(data_with_profiles.map((profile) => profile.user_profiles.year.toString()))));\n          } catch (error) {\n            console.error(\"Error fetching profiles:\", error);\n          }\n        };\n        getAllProfiles();\n      }, []);\n      useEffect(() => {\n        const filterProfiles = () => {\n            if (allProfiles) {\n                const filteredData = allProfiles.filter((profile) => {\n                  const matchesYear= (selectedYears.length === 0 || selectedYears.includes(profile.user_profiles.year.toString()));\n                  if (!matchesYear) return false;\n                  if (searchInput === \"\") return true;\n                  const lowerSearchInput = searchInput.toLowerCase();\n                  const bioMatches = (profile.user_profiles.bio?.toLowerCase().includes(lowerSearchInput));\n                  const majorMatches = (profile.user_profiles.major?.toLowerCase().includes(lowerSearchInput));\n                  const firstNameMatches = (profile.first_name.toLowerCase().includes(lowerSearchInput));\n                  const lastNameMatches = (profile.last_name.toLowerCase().includes(lowerSearchInput));\n                  return (bioMatches || majorMatches || firstNameMatches || lastNameMatches);\n                });\n                setFilteredProfiles(filteredData);\n              }\n        };\n        filterProfiles();\n      }, [searchInput, allProfiles, selectedYears]);\n    return (\n        <div className='Page'>\n            <div className = \"Form\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search by keywords\"\n                    className='input-name'\n                    onChange={(e) => setSearchInput(e.target.value)}\n                />\n                <p>Graduation Year:</p>\n                <div>\n                    {allYears.map((year) => (\n                        <label key={year}>\n                            <input\n                                type=\"checkbox\"\n                                value = {year}\n                                checked={selectedYears.includes(year)}\n                                onChange={handleYearChange}\n                            />\n                            {year}\n                        </label>\n                    ))}\n                </div>\n            </div> \n            <div className=\"Grid\">\n                {filteredProfiles.map((student) => (\n                    <ProfileCard \n                            key={student.id} \n                            id={student.id} \n                            firstName={student.first_name}\n                            lastName={student.last_name} \n                            year={student.user_profiles.year}\n                            major={student.user_profiles.major}\n                            bio = {student.user_profiles.bio}\n                            image = {student.profilepicture}\n                        />\n                    ))\n                }\n            </div>\n        </div>\n    )\n\n}\nexport default Profiles;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}