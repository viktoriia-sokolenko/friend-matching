{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [userId, setUserId] = useState(localStorage.getItem(\"user_id\") || null);\n  const [toggleTrigger, setToggleTrigger] = useState(0);\n  const listInterests = [\"Science\", \"Technology\", \"Video Games\", \"Sports/Fitness/Yoga\", \"Sports (watching)\", \"Music\", \"Film/Television\", \"Visual Arts (Painting, Drawing, Sculpture, etc.)\", \"Performing Arts (Theater, Dance, etc.)\", \"Photography\", \"Cooking/Baking\", \"Crafts (Crocheting, Knitting, DIY, etc.)\", \"Hiking/Outdoor activities\", \"Travel\", \"Sustainability (Environmentalism, Eco-conscious Living)\", \"Activism/Advocacy (Social Justice, Political, etc.)\", \"Volunteering (Charity work, Community service)\", \"Entrepreneurship (Startups, Business, etc.)\", \"Other\"];\n  const handleLogout = () => {\n    if (userId) {\n      setUserId(\"\");\n      localStorage.removeItem(\"user_id\");\n      setToken(\"\");\n      localStorage.removeItem(\"access_token\");\n      setSavedProfiles([]);\n      window.location = `/`;\n    }\n  };\n  const [savedProfiles, setSavedProfiles] = useState([]);\n  useEffect(() => {\n    const fetchSavedProfiles = async () => {\n      if (!userId || !token) return;\n      try {\n        const response = await fetch(`/users/saved_profiles/${userId}`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error fetching saved profiles: ${response.status}`);\n        }\n        const data = await response.json();\n        setSavedProfiles(data);\n      } catch (error) {\n        console.error('Error fetching saved profiles:', error);\n      }\n    };\n    fetchSavedProfiles();\n  }, [userId, token, toggleTrigger]);\n  const handleToggleSave = async (profileId, isSaved) => {\n    const method = isSaved ? 'DELETE' : 'POST';\n    const endpoint = `/users/saved_profiles/`;\n    const body = JSON.stringify({\n      saved_id: profileId,\n      user_id: userId\n    });\n    try {\n      const response = await fetch(endpoint, {\n        method,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body\n      });\n      if (response.ok) {\n        setToggleTrigger(prev => prev + 1); // Trigger fetch\n      } else {\n        throw new Error(`Failed to toggle profile save: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error toggling saved profile:', error);\n    }\n  };\n  useEffect(() => {\n    const hashParams = new URLSearchParams(window.location.hash.substring(1));\n    const accessToken = hashParams.get(\"access_token\");\n    if (accessToken) {\n      setToken(accessToken);\n      localStorage.setItem(\"access_token\", accessToken);\n      window.history.replaceState(null, \"\", window.location.pathname);\n    } else {\n      const savedToken = localStorage.getItem(\"access_token\");\n      if (savedToken) {\n        setToken(savedToken);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      setToken,\n      userId,\n      setUserId,\n      handleLogout,\n      savedProfiles,\n      handleToggleSave\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"pJIgcBMqfl3nJ+ql6661u7DuhDM=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","userId","setUserId","localStorage","getItem","toggleTrigger","setToggleTrigger","listInterests","handleLogout","removeItem","setSavedProfiles","window","location","savedProfiles","fetchSavedProfiles","response","fetch","method","headers","Authorization","ok","Error","status","data","json","error","console","handleToggleSave","profileId","isSaved","endpoint","body","JSON","stringify","saved_id","user_id","prev","hashParams","URLSearchParams","hash","substring","accessToken","get","setItem","history","replaceState","pathname","savedToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [token, setToken] = useState(\"\");\n    const [userId, setUserId] = useState(localStorage.getItem(\"user_id\") || null);\n    const [toggleTrigger, setToggleTrigger] = useState(0);\n    const listInterests = [\"Science\", \"Technology\", \"Video Games\", \"Sports/Fitness/Yoga\", \"Sports (watching)\", \"Music\", \"Film/Television\", \"Visual Arts (Painting, Drawing, Sculpture, etc.)\", \"Performing Arts (Theater, Dance, etc.)\", \"Photography\", \"Cooking/Baking\", \"Crafts (Crocheting, Knitting, DIY, etc.)\", \"Hiking/Outdoor activities\", \"Travel\", \"Sustainability (Environmentalism, Eco-conscious Living)\", \"Activism/Advocacy (Social Justice, Political, etc.)\", \"Volunteering (Charity work, Community service)\", \"Entrepreneurship (Startups, Business, etc.)\", \"Other\"] \n    const handleLogout = () => {\n        if (userId) {\n            setUserId(\"\");\n            localStorage.removeItem(\"user_id\");\n            setToken(\"\");\n            localStorage.removeItem(\"access_token\");\n            setSavedProfiles([]);\n            window.location = `/`;\n        }\n    };\n    const [savedProfiles, setSavedProfiles] = useState([]);\n    useEffect(() => {\n        const fetchSavedProfiles = async () => {\n            if (!userId || !token) return;\n            try {\n              const response = await fetch(`/users/saved_profiles/${userId}`, {\n                method: 'GET',\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              });\n              if (!response.ok) {\n                throw new Error(`Error fetching saved profiles: ${response.status}`);\n              }\n              const data = await response.json();\n              setSavedProfiles(data);\n            } catch (error) {\n              console.error('Error fetching saved profiles:', error);\n            }\n          };\n        fetchSavedProfiles();\n    }, [userId, token, toggleTrigger]);\n    const handleToggleSave = async (profileId, isSaved) => {\n        const method = isSaved ? 'DELETE' : 'POST';\n        const endpoint = `/users/saved_profiles/`;\n        const body = JSON.stringify({ saved_id: profileId, user_id: userId });\n\n        try {\n            const response = await fetch(endpoint, {\n                method,\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body,\n            });\n            if (response.ok) {\n                setToggleTrigger((prev) => prev + 1);  // Trigger fetch\n            } else {\n                throw new Error(`Failed to toggle profile save: ${response.status}`);\n            }\n        } catch (error) {\n            console.error('Error toggling saved profile:', error);\n        }\n    };\n    useEffect(() => {\n        const hashParams = new URLSearchParams(window.location.hash.substring(1));\n        const accessToken = hashParams.get(\"access_token\");\n        if (accessToken) {\n            setToken(accessToken);\n            localStorage.setItem(\"access_token\", accessToken);\n            window.history.replaceState(null, \"\", window.location.pathname);\n        } else {\n            const savedToken = localStorage.getItem(\"access_token\");\n            if (savedToken) {\n                setToken(savedToken);\n            }\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ token, setToken, userId, setUserId, handleLogout, savedProfiles, handleToggleSave }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAACa,YAAY,CAACC,OAAO,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC;EAC7E,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAMiB,aAAa,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,qBAAqB,EAAE,mBAAmB,EAAE,OAAO,EAAE,iBAAiB,EAAE,kDAAkD,EAAE,wCAAwC,EAAE,aAAa,EAAE,gBAAgB,EAAE,0CAA0C,EAAE,2BAA2B,EAAE,QAAQ,EAAE,yDAAyD,EAAE,qDAAqD,EAAE,gDAAgD,EAAE,6CAA6C,EAAE,OAAO,CAAC;EACpjB,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvB,IAAIP,MAAM,EAAE;MACRC,SAAS,CAAC,EAAE,CAAC;MACbC,YAAY,CAACM,UAAU,CAAC,SAAS,CAAC;MAClCT,QAAQ,CAAC,EAAE,CAAC;MACZG,YAAY,CAACM,UAAU,CAAC,cAAc,CAAC;MACvCC,gBAAgB,CAAC,EAAE,CAAC;MACpBC,MAAM,CAACC,QAAQ,GAAG,GAAG;IACzB;EACJ,CAAC;EACD,MAAM,CAACC,aAAa,EAAEH,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtDC,SAAS,CAAC,MAAM;IACZ,MAAMuB,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI,CAACb,MAAM,IAAI,CAACF,KAAK,EAAE;MACvB,IAAI;QACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,yBAAyBf,MAAM,EAAE,EAAE;UAC9DgB,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUpB,KAAK;UAChC;QACF,CAAC,CAAC;QACF,IAAI,CAACgB,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkCN,QAAQ,CAACO,MAAM,EAAE,CAAC;QACtE;QACA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCd,gBAAgB,CAACa,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACHX,kBAAkB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACb,MAAM,EAAEF,KAAK,EAAEM,aAAa,CAAC,CAAC;EAClC,MAAMsB,gBAAgB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,OAAO,KAAK;IACnD,MAAMZ,MAAM,GAAGY,OAAO,GAAG,QAAQ,GAAG,MAAM;IAC1C,MAAMC,QAAQ,GAAG,wBAAwB;IACzC,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;MAAEC,QAAQ,EAAEN,SAAS;MAAEO,OAAO,EAAElC;IAAO,CAAC,CAAC;IAErE,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAACc,QAAQ,EAAE;QACnCb,MAAM;QACNC,OAAO,EAAE;UACLC,aAAa,EAAE,UAAUpB,KAAK,EAAE;UAChC,cAAc,EAAE;QACpB,CAAC;QACDgC;MACJ,CAAC,CAAC;MACF,IAAIhB,QAAQ,CAACK,EAAE,EAAE;QACbd,gBAAgB,CAAE8B,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC,CAAC,CAAE;MAC3C,CAAC,MAAM;QACH,MAAM,IAAIf,KAAK,CAAC,kCAAkCN,QAAQ,CAACO,MAAM,EAAE,CAAC;MACxE;IACJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC;EACDlC,SAAS,CAAC,MAAM;IACZ,MAAM8C,UAAU,GAAG,IAAIC,eAAe,CAAC3B,MAAM,CAACC,QAAQ,CAAC2B,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;IACzE,MAAMC,WAAW,GAAGJ,UAAU,CAACK,GAAG,CAAC,cAAc,CAAC;IAClD,IAAID,WAAW,EAAE;MACbzC,QAAQ,CAACyC,WAAW,CAAC;MACrBtC,YAAY,CAACwC,OAAO,CAAC,cAAc,EAAEF,WAAW,CAAC;MACjD9B,MAAM,CAACiC,OAAO,CAACC,YAAY,CAAC,IAAI,EAAE,EAAE,EAAElC,MAAM,CAACC,QAAQ,CAACkC,QAAQ,CAAC;IACnE,CAAC,MAAM;MACH,MAAMC,UAAU,GAAG5C,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;MACvD,IAAI2C,UAAU,EAAE;QACZ/C,QAAQ,CAAC+C,UAAU,CAAC;MACxB;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIrD,OAAA,CAACC,WAAW,CAACqD,QAAQ;IAACC,KAAK,EAAE;MAAElD,KAAK;MAAEC,QAAQ;MAAEC,MAAM;MAAEC,SAAS;MAAEM,YAAY;MAAEK,aAAa;MAAEc;IAAiB,CAAE;IAAA9B,QAAA,EAC9GA;EAAQ;IAAAqD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACvD,EAAA,CAhFWF,YAAY;AAAA0D,EAAA,GAAZ1D,YAAY;AAkFzB,OAAO,MAAM2D,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,OAAOhE,UAAU,CAACG,WAAW,CAAC;AAClC,CAAC;AAAC6D,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}