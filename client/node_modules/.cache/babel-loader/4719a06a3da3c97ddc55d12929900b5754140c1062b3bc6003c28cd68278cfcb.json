{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport ProfileCard from '../components/ProfileCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = () => {\n  _s();\n  const [allProfiles, setAllProfiles] = useState([]);\n  const [filteredProfiles, setFilteredProfiles] = useState([]);\n  useEffect(() => {\n    const getAllProfiles = async () => {\n      try {\n        const response = await fetch('/users/profiles');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(data);\n        const data_with_profiles = data.filter(student => student.user_profiles !== null);\n        setAllProfiles();\n        setFilteredProfiles(data);\n      } catch (error) {\n        console.error(\"Error fetching profiles:\", error);\n      }\n    };\n    getAllProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Grid\",\n    children: filteredProfiles.map(student => /*#__PURE__*/_jsxDEV(ProfileCard, {\n      id: student.id,\n      firstName: student.first_name,\n      lastName: student.last_name,\n      year: student.user_profiles.year,\n      major: student.user_profiles.major,\n      bio: student.user_profiles.bio,\n      image: student.profilepicture\n    }, student.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 20\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(Profiles, \"C8aEw6rvxjiiEjrtDtEsSTa60Lw=\");\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["useState","useEffect","ProfileCard","jsxDEV","_jsxDEV","Profiles","_s","allProfiles","setAllProfiles","filteredProfiles","setFilteredProfiles","getAllProfiles","response","fetch","ok","Error","status","data","json","console","log","data_with_profiles","filter","student","user_profiles","error","className","children","map","id","firstName","first_name","lastName","last_name","year","major","bio","image","profilepicture","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport ProfileCard from '../components/ProfileCard';\n\n\nconst Profiles = () => {\n    const [allProfiles, setAllProfiles] = useState([]);\n    const [filteredProfiles, setFilteredProfiles] = useState([]);\n    useEffect(() => {\n        const getAllProfiles = async () => {\n          try {\n            const response = await fetch('/users/profiles');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const data = await response.json();\n            console.log(data);\n            const data_with_profiles = data.filter(student => student.user_profiles !== null);\n            setAllProfiles();\n            setFilteredProfiles(data);\n          } catch (error) {\n            console.error(\"Error fetching profiles:\", error);\n          }\n        };\n        getAllProfiles();\n      }, []);\n    return (\n        <div className=\"Grid\">\n            {filteredProfiles.map((student) => (\n                   <ProfileCard \n                        key={student.id} \n                        id={student.id} \n                        firstName={student.first_name}\n                        lastName={student.last_name} \n                        year={student.user_profiles.year}\n                        major={student.user_profiles.major}\n                        bio = {student.user_profiles.bio}\n                        image = {student.profilepicture}\n                    />\n                ))\n            }\n        </div>\n    )\n\n}\nexport default Profiles;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5DC,SAAS,CAAC,MAAM;IACZ,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iBAAiB,CAAC;QAC/C,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjB,MAAMI,kBAAkB,GAAGJ,IAAI,CAACK,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,aAAa,KAAK,IAAI,CAAC;QACjFhB,cAAc,CAAC,CAAC;QAChBE,mBAAmB,CAACO,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdN,OAAO,CAACM,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDd,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACR,oBACIP,OAAA;IAAKsB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBlB,gBAAgB,CAACmB,GAAG,CAAEL,OAAO,iBACvBnB,OAAA,CAACF,WAAW;MAEP2B,EAAE,EAAEN,OAAO,CAACM,EAAG;MACfC,SAAS,EAAEP,OAAO,CAACQ,UAAW;MAC9BC,QAAQ,EAAET,OAAO,CAACU,SAAU;MAC5BC,IAAI,EAAEX,OAAO,CAACC,aAAa,CAACU,IAAK;MACjCC,KAAK,EAAEZ,OAAO,CAACC,aAAa,CAACW,KAAM;MACnCC,GAAG,EAAIb,OAAO,CAACC,aAAa,CAACY,GAAI;MACjCC,KAAK,EAAId,OAAO,CAACe;IAAe,GAP3Bf,OAAO,CAACM,EAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQlB,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAGd,CAAC;AAAApC,EAAA,CAvCKD,QAAQ;AAAAsC,EAAA,GAARtC,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}