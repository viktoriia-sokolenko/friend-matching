{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport ProfileCard from '../components/ProfileCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profiles = () => {\n  _s();\n  const [allProfiles, setAllProfiles] = useState([]);\n  const [filteredProfiles, setFilteredProfiles] = useState([]);\n  useEffect(() => {\n    const getAllProfiles = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3001/users\");\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const text = await response.text();\n        console.log(\"Response Text:\", text);\n        const data = await response.json();\n        console.log(data);\n        setAllProfiles(data);\n        setFilteredProfiles(data);\n      } catch (error) {\n        console.error(\"Error fetching profiles:\", error);\n      }\n    };\n    getAllProfiles();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Grid\",\n    children: filteredProfiles.map(student => /*#__PURE__*/_jsxDEV(ProfileCard, {\n      id: student.id,\n      firstName: student.firstname,\n      lastName: student.lastname,\n      year: student.graduationyear,\n      major: student.major,\n      bio: student.bio,\n      image: student.profilepicture\n    }, student.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Profiles, \"C8aEw6rvxjiiEjrtDtEsSTa60Lw=\");\n_c = Profiles;\nexport default Profiles;\nvar _c;\n$RefreshReg$(_c, \"Profiles\");","map":{"version":3,"names":["useState","useEffect","ProfileCard","jsxDEV","_jsxDEV","Profiles","_s","allProfiles","setAllProfiles","filteredProfiles","setFilteredProfiles","getAllProfiles","response","fetch","ok","Error","status","text","console","log","data","json","error","className","children","map","student","id","firstName","firstname","lastName","lastname","year","graduationyear","major","bio","image","profilepicture","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/Profiles.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport ProfileCard from '../components/ProfileCard';\n\n\nconst Profiles = () => {\n    const [allProfiles, setAllProfiles] = useState([]);\n    const [filteredProfiles, setFilteredProfiles] = useState([]);\n    useEffect(() => {\n        const getAllProfiles = async () => {\n          try {\n            const response = await fetch(\"http://localhost:3001/users\");\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            const text = await response.text();\n            console.log(\"Response Text:\", text);\n            const data = await response.json();\n            console.log(data);\n            setAllProfiles(data);\n            setFilteredProfiles(data);\n          } catch (error) {\n            console.error(\"Error fetching profiles:\", error);\n          }\n        };\n        getAllProfiles();\n      }, []);\n    return (\n        <div className=\"Grid\">\n            {filteredProfiles.map((student) => (\n                   <ProfileCard \n                        key={student.id} \n                        id={student.id} \n                        firstName={student.firstname}\n                        lastName={student.lastname} \n                        year={student.graduationyear}\n                        major={student.major}\n                        bio = {student.bio}\n                        image = {student.profilepicture}\n                    />\n                ))\n            }\n        </div>\n    )\n\n}\nexport default Profiles;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5DC,SAAS,CAAC,MAAM;IACZ,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,CAAC;QAC3D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACK,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,IAAI,CAAC;QACnC,MAAMG,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCH,OAAO,CAACC,GAAG,CAACC,IAAI,CAAC;QACjBZ,cAAc,CAACY,IAAI,CAAC;QACpBV,mBAAmB,CAACU,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdJ,OAAO,CAACI,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IACDX,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACR,oBACIP,OAAA;IAAKmB,SAAS,EAAC,MAAM;IAAAC,QAAA,EAChBf,gBAAgB,CAACgB,GAAG,CAAEC,OAAO,iBACvBtB,OAAA,CAACF,WAAW;MAEPyB,EAAE,EAAED,OAAO,CAACC,EAAG;MACfC,SAAS,EAAEF,OAAO,CAACG,SAAU;MAC7BC,QAAQ,EAAEJ,OAAO,CAACK,QAAS;MAC3BC,IAAI,EAAEN,OAAO,CAACO,cAAe;MAC7BC,KAAK,EAAER,OAAO,CAACQ,KAAM;MACrBC,GAAG,EAAIT,OAAO,CAACS,GAAI;MACnBC,KAAK,EAAIV,OAAO,CAACW;IAAe,GAP3BX,OAAO,CAACC,EAAE;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQlB,CACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAGd,CAAC;AAAAnC,EAAA,CAxCKD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}