{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/ViewProfile.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewProfile = () => {\n  _s();\n  let params = useParams();\n  let id = params.id;\n  useEffect(() => {\n    const fetchAllProfiles = async () => {\n      try {\n        const response = await fetch(`https://disc-assignment-5-users-api.onrender.com/api/users/${id}`);\n        const data = await response.json();\n        console.log(data);\n        setStudent(data);\n      } catch (error) {\n        console.error(\"Error fetching student profile:\", error);\n      }\n    };\n    fetchAllProfiles();\n  }, []);\n  const [student, setStudent] = useState({});\n  const [firstName, setFirstName] = useState(\"First Name\");\n  const [lastName, setLastName] = useState(\"Last Name\");\n  const [year, setYear] = useState(1000);\n  const [bio, setBio] = useState(\"Bio\");\n  const [major, setMajor] = useState(\"Major\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Profile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [student.firstname, \" \", student.lastname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: student.major\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Class of \", student.year]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: student.bio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewProfile, \"flws7iJXmWyvrZoNBbp+k5fTJZI=\", false, function () {\n  return [useParams];\n});\n_c = ViewProfile;\nexport default ViewProfile;\nvar _c;\n$RefreshReg$(_c, \"ViewProfile\");","map":{"version":3,"names":["useState","useEffect","useParams","jsxDEV","_jsxDEV","ViewProfile","_s","params","id","fetchAllProfiles","response","fetch","data","json","console","log","setStudent","error","student","firstName","setFirstName","lastName","setLastName","year","setYear","bio","setBio","major","setMajor","className","children","firstname","lastname","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/pages/ViewProfile.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { useParams } from \"react-router-dom\";\n\n\nconst ViewProfile = () => {\n    let params = useParams();\n    let id = params.id;\n    useEffect(() => {\n        const fetchAllProfiles = async () => {\n          try {\n            const response = await fetch(`https://disc-assignment-5-users-api.onrender.com/api/users/${id}`);\n            const data = await response.json();\n            console.log(data);\n            setStudent(data);\n          } catch (error) {\n            console.error(\"Error fetching student profile:\", error);\n          }\n        };\n        fetchAllProfiles();\n      }, []);\n    const [student, setStudent] = useState({})\n    const [firstName, setFirstName] = useState(\"First Name\");\n    const [lastName, setLastName] = useState(\"Last Name\");\n    const [year, setYear] = useState(1000);\n    const [bio, setBio] = useState(\"Bio\");\n    const [major, setMajor] = useState(\"Major\");\n    return (\n        <div className = \"Profile\">\n            <div>\n                <h1>{student.firstname} {student.lastname}</h1>\n                <h2>{student.major}</h2>\n                <h2>Class of {student.year}</h2>\n                <p>{student.bio}</p>\n            </div>\n        </div>\n    )\n\n}\nexport default ViewProfile;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,IAAIC,MAAM,GAAGL,SAAS,CAAC,CAAC;EACxB,IAAIM,EAAE,GAAGD,MAAM,CAACC,EAAE;EAClBP,SAAS,CAAC,MAAM;IACZ,MAAMQ,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8DAA8DH,EAAE,EAAE,CAAC;QAChG,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBI,UAAU,CAACJ,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;MACzD;IACF,CAAC;IACDR,gBAAgB,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EACR,MAAM,CAACS,OAAO,EAAEF,UAAU,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,YAAY,CAAC;EACxD,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,WAAW,CAAC;EACrD,MAAM,CAACuB,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACyB,GAAG,EAAEC,MAAM,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACrC,MAAM,CAAC2B,KAAK,EAAEC,QAAQ,CAAC,GAAG5B,QAAQ,CAAC,OAAO,CAAC;EAC3C,oBACII,OAAA;IAAKyB,SAAS,EAAG,SAAS;IAAAC,QAAA,eACtB1B,OAAA;MAAA0B,QAAA,gBACI1B,OAAA;QAAA0B,QAAA,GAAKZ,OAAO,CAACa,SAAS,EAAC,GAAC,EAACb,OAAO,CAACc,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/ChC,OAAA;QAAA0B,QAAA,EAAKZ,OAAO,CAACS;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBhC,OAAA;QAAA0B,QAAA,GAAI,WAAS,EAACZ,OAAO,CAACK,IAAI;MAAA;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChChC,OAAA;QAAA0B,QAAA,EAAIZ,OAAO,CAACO;MAAG;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAGd,CAAC;AAAA9B,EAAA,CAjCKD,WAAW;EAAA,QACAH,SAAS;AAAA;AAAAmC,EAAA,GADpBhC,WAAW;AAkCjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}