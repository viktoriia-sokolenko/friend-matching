{"ast":null,"code":"var _jsxFileName = \"/Users/viktoriiasokolenko/Documents/disc/my-app/src/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [token, setToken] = useState(\"\");\n  const [userId, setUserId] = useState(localStorage.getItem(\"user_id\") || null);\n  const [toggleTrigger, setToggleTrigger] = useState(0);\n  const listOfInterests = [\"History/Politics\", \"Science/Technology\", \"Video Games\", \"Sports/Fitness\", \"Sports (watching)\", \"Literature\", \"Film/Television\", \"Music\", \"Visual Arts\", \"Performing Arts\", \"Cooking/Baking\", \"Crafts/DIY\", \"Hiking/Outdoor activities\", \"Travel\", \"Sustainability\", \"Activism/Advocacy\", \"Volunteering\", \"Other\"];\n  const getInterestVector = rankedInterests => {\n    return listOfInterests.map(interest => rankedInterests[interest] || 0);\n  };\n  const calculateSimilarity = (vec1, vec2) => {\n    const dotpdt = vec1.reduce((acc, val, i) => acc + val * vec2[i], 0);\n    const vec1sqrd = vec1.reduce((acc, val) => acc + val * val, 0);\n    const vec2sqrd = vec2.reduce((acc, val) => acc + val * val, 0);\n    if (vec2sqrd == 0 || vec1sqrd == 0) {\n      return 0;\n    }\n    const cosineSimilarity = dotpdt / (Math.sqrt(vec1sqrd) * Math.sqrt(vec2sqrd));\n    return Math.max(0, cosineSimilarity) * 100;\n  };\n  const getInterestScore = (rankings, user) => {\n    const userVector = getInterestVector(user.user_profiles.rankings);\n    console.log(\"userVector\", user, userVector);\n    const studentVector = getInterestVector(rankings);\n    console.log(\"studentVector\", rankings, studentVector);\n    const score = calculateSimilarity(userVector, studentVector);\n    return score.toFixed(2);\n  };\n  const memoizedGetInterestScore = useMemo(() => getInterestScore, [getInterestVector, calculateSimilarity]);\n  const handleLogout = () => {\n    if (userId) {\n      setUserId(\"\");\n      localStorage.removeItem(\"user_id\");\n      setToken(\"\");\n      localStorage.removeItem(\"access_token\");\n      setSavedProfiles([]);\n      window.location = `/`;\n    }\n  };\n  const [savedProfiles, setSavedProfiles] = useState([]);\n  useEffect(() => {\n    const fetchSavedProfiles = async () => {\n      if (!userId || !token) return;\n      try {\n        var _user$user_profiles, _user$user_profiles2;\n        const response = await fetch(`/users/saved_profiles/${userId}`, {\n          method: 'GET',\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(`Error fetching saved profiles: ${response.status}`);\n        }\n        const data = await response.json();\n        const user = data.find(student => student.id === userId);\n        let data_with_scores = data_with_profiles.filter(student => student.id !== userId);\n        ;\n        if ((_user$user_profiles = user.user_profiles) !== null && _user$user_profiles !== void 0 && _user$user_profiles.interests && (_user$user_profiles2 = user.user_profiles) !== null && _user$user_profiles2 !== void 0 && _user$user_profiles2.rankings) {\n          setUserInterests(true);\n          data_with_scores = data_with_scores.map(student => {\n            const {\n              interests,\n              rankings\n            } = student.user_profiles;\n            const interestScore = memoizedGetInterestScore(rankings, user);\n            return {\n              ...student,\n              interestScore\n            };\n          });\n          console.log(data_with_scores);\n        }\n        setSavedProfiles(data);\n      } catch (error) {\n        console.error('Error fetching saved profiles:', error);\n      }\n    };\n    fetchSavedProfiles();\n  }, [userId, token, toggleTrigger]);\n  const handleToggleSave = async (profileId, isSaved) => {\n    const method = isSaved ? 'DELETE' : 'POST';\n    const endpoint = `/users/saved_profiles/`;\n    const body = JSON.stringify({\n      saved_id: profileId,\n      user_id: userId\n    });\n    try {\n      const response = await fetch(endpoint, {\n        method,\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body\n      });\n      if (response.ok) {\n        setToggleTrigger(prev => prev + 1); // Trigger fetch\n      } else {\n        throw new Error(`Failed to toggle profile save: ${response.status}`);\n      }\n    } catch (error) {\n      console.error('Error toggling saved profile:', error);\n    }\n  };\n  useEffect(() => {\n    const hashParams = new URLSearchParams(window.location.hash.substring(1));\n    const accessToken = hashParams.get(\"access_token\");\n    if (accessToken) {\n      setToken(accessToken);\n      localStorage.setItem(\"access_token\", accessToken);\n      window.history.replaceState(null, \"\", window.location.pathname);\n    } else {\n      const savedToken = localStorage.getItem(\"access_token\");\n      if (savedToken) {\n        setToken(savedToken);\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      setToken,\n      userId,\n      setUserId,\n      handleLogout,\n      savedProfiles,\n      handleToggleSave,\n      listOfInterests,\n      memoizedGetInterestScore\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"peZfGTJoZt/YshGeXe2TTcuUec4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","useMemo","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","token","setToken","userId","setUserId","localStorage","getItem","toggleTrigger","setToggleTrigger","listOfInterests","getInterestVector","rankedInterests","map","interest","calculateSimilarity","vec1","vec2","dotpdt","reduce","acc","val","i","vec1sqrd","vec2sqrd","cosineSimilarity","Math","sqrt","max","getInterestScore","rankings","user","userVector","user_profiles","console","log","studentVector","score","toFixed","memoizedGetInterestScore","handleLogout","removeItem","setSavedProfiles","window","location","savedProfiles","fetchSavedProfiles","_user$user_profiles","_user$user_profiles2","response","fetch","method","headers","Authorization","ok","Error","status","data","json","find","student","id","data_with_scores","data_with_profiles","filter","interests","setUserInterests","interestScore","error","handleToggleSave","profileId","isSaved","endpoint","body","JSON","stringify","saved_id","user_id","prev","hashParams","URLSearchParams","hash","substring","accessToken","get","setItem","history","replaceState","pathname","savedToken","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/viktoriiasokolenko/Documents/disc/my-app/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext, useMemo } from 'react';\n\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n    const [token, setToken] = useState(\"\");\n    const [userId, setUserId] = useState(localStorage.getItem(\"user_id\") || null);\n    const [toggleTrigger, setToggleTrigger] = useState(0);\n    const listOfInterests = [\"History/Politics\", \"Science/Technology\", \"Video Games\", \"Sports/Fitness\", \"Sports (watching)\", \"Literature\", \"Film/Television\", \"Music\", \"Visual Arts\", \"Performing Arts\", \"Cooking/Baking\", \"Crafts/DIY\", \"Hiking/Outdoor activities\", \"Travel\", \"Sustainability\", \"Activism/Advocacy\", \"Volunteering\", \"Other\"];\n    const getInterestVector = (rankedInterests) =>{\n        return listOfInterests.map(interest => rankedInterests[interest] || 0);\n    }\n    const calculateSimilarity = (vec1, vec2) => {\n        const dotpdt = vec1.reduce((acc, val, i) => acc + val * vec2[i], 0);\n        const vec1sqrd = vec1.reduce((acc, val) => acc + val * val, 0);\n        const vec2sqrd = vec2.reduce((acc, val) => acc + val * val, 0);\n        if (vec2sqrd == 0 || vec1sqrd == 0){\n            return 0;\n        }\n        const cosineSimilarity = (dotpdt/(Math.sqrt(vec1sqrd)*Math.sqrt(vec2sqrd)));\n        return (Math.max(0, cosineSimilarity)*100);\n    }\n    const getInterestScore = (rankings, user) => {\n        const userVector = getInterestVector(user.user_profiles.rankings);\n        console.log(\"userVector\", user, userVector);\n        const studentVector = getInterestVector(rankings);\n        console.log(\"studentVector\", rankings, studentVector);\n        const score = calculateSimilarity(userVector, studentVector);\n        return score.toFixed(2);\n    }\n    const memoizedGetInterestScore = useMemo(() => getInterestScore, [getInterestVector, calculateSimilarity]); \n    const handleLogout = () => {\n        if (userId) {\n            setUserId(\"\");\n            localStorage.removeItem(\"user_id\");\n            setToken(\"\");\n            localStorage.removeItem(\"access_token\");\n            setSavedProfiles([]);\n            window.location = `/`;\n        }\n    };\n    const [savedProfiles, setSavedProfiles] = useState([]);\n    useEffect(() => {\n        const fetchSavedProfiles = async () => {\n            if (!userId || !token) return;\n            try {\n              const response = await fetch(`/users/saved_profiles/${userId}`, {\n                method: 'GET',\n                headers: {\n                  Authorization: `Bearer ${token}`,\n                },\n              });\n              if (!response.ok) {\n                throw new Error(`Error fetching saved profiles: ${response.status}`);\n              }\n                const data = await response.json();\n                const user = data.find((student) => student.id === userId);\n                let data_with_scores = data_with_profiles.filter(student => student.id !== userId);;\n            if (user.user_profiles?.interests && user.user_profiles?.rankings){\n                setUserInterests(true);\n                data_with_scores = data_with_scores.map(student => {\n                    const { interests, rankings } = student.user_profiles;\n                    const interestScore = memoizedGetInterestScore(rankings, user);\n                    return { ...student, interestScore };\n                });\n                console.log(data_with_scores);\n            }\n              setSavedProfiles(data);\n            } catch (error) {\n              console.error('Error fetching saved profiles:', error);\n            }\n          };\n        fetchSavedProfiles();\n    }, [userId, token, toggleTrigger]);\n    const handleToggleSave = async (profileId, isSaved) => {\n        const method = isSaved ? 'DELETE' : 'POST';\n        const endpoint = `/users/saved_profiles/`;\n        const body = JSON.stringify({ saved_id: profileId, user_id: userId });\n\n        try {\n            const response = await fetch(endpoint, {\n                method,\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body,\n            });\n            if (response.ok) {\n                setToggleTrigger((prev) => prev + 1);  // Trigger fetch\n            } else {\n                throw new Error(`Failed to toggle profile save: ${response.status}`);\n            }\n        } catch (error) {\n            console.error('Error toggling saved profile:', error);\n        }\n    };\n    useEffect(() => {\n        const hashParams = new URLSearchParams(window.location.hash.substring(1));\n        const accessToken = hashParams.get(\"access_token\");\n        if (accessToken) {\n            setToken(accessToken);\n            localStorage.setItem(\"access_token\", accessToken);\n            window.history.replaceState(null, \"\", window.location.pathname);\n        } else {\n            const savedToken = localStorage.getItem(\"access_token\");\n            if (savedToken) {\n                setToken(savedToken);\n            }\n        }\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ token, setToken, userId, setUserId, handleLogout, savedProfiles, handleToggleSave, listOfInterests, memoizedGetInterestScore }}>\n            {children}\n        </AuthContext.Provider>\n    );\n};\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}